name: Build and Release PowerModeSwitcher

on:
  push:
    tags:
      - 'v*' # Matches version tags like v0.9.5

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Install goversioninfo
      run: go install github.com/josephspurrier/goversioninfo/cmd/goversioninfo@latest

    - name: Extract version from tag
      id: vars
      run: |
        echo "TAG=${GITHUB_REF#refs/tags/}" >> $env:GITHUB_ENV
        echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $env:GITHUB_ENV

    - name: Prepare versioninfo.json
      run: |
        $json = Get-Content versioninfo.json | ConvertFrom-Json
        $v = "${{ env.VERSION }}".Split(".")
        $json.FixedFileInfo.FileVersion.Major = [int]$v[0]
        $json.FixedFileInfo.FileVersion.Minor = [int]$v[1]
        $json.FixedFileInfo.FileVersion.Patch = [int]$v[2]
        $json.FixedFileInfo.FileVersion.Build = 0

        $json.FixedFileInfo.ProductVersion.Major = [int]$v[0]
        $json.FixedFileInfo.ProductVersion.Minor = [int]$v[1]
        $json.FixedFileInfo.ProductVersion.Patch = [int]$v[2]
        $json.FixedFileInfo.ProductVersion.Build = 0

        $json.StringFileInfo.FileVersion = "${{ env.VERSION }}"
        $json.StringFileInfo.ProductVersion = "${{ env.VERSION }}"
        $json | ConvertTo-Json -Depth 10 | Set-Content versioninfo.json

    - name: Inject version info
      run: goversioninfo -o=rsrc.syso versioninfo.json

    - name: Build .exe
      run: go build -ldflags="-s -w -H windowsgui" -o PowerModeSwitcher.exe

    - name: Upload release binary
      uses: softprops/action-gh-release@v2
      with:
        files: PowerModeSwitcher.exe
        tag_name: ${{ github.ref_name }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
